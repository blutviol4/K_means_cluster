#https://cran.r-project.org/web/packages/geocmeans/vignettes/rasters.html


print(Sys.time())
rm(list = ls()) # clean memory
#install.packages(c("sf", "stars", "gstat"))

# para limpiar el terminal que plotea las imagenes
dev.off()

install.packages(c("geocmeans","ggpubr", "future", "tmap", "viridis", "RColorBrewer", "ggplot2"))

library(raster)
library(geocmeans)
library(ggpubr)
library(future)
library(tmap)
library(viridis)
library(viridisLite)
library(RColorBrewer)
library(ggplot2)
library(fclust)

setwd("C:/Users/Blutv/OneDrive/Documents/BUNDLES/Bundles")
list.files()
All<- raster("C:/Users/Blutv/OneDrive/Documents/BUNDLES/Bundles/R_stack.tif")


# converting the RasterBrick to a simple list of RasterLayer
dataset <- lapply(names(All), function(n){
  aband <- All[[n]]
  return(aband)
})

# giving a name to each band
names(dataset) <- names(All)


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
install.packages("factoextra")
library(factoextra)

sil <- fviz_nbclust(dataset, kmeans, method = "silhouette", nboot = 1000)

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 


# finding an appropriate k and m values (using a multicore plan)
future::plan(future::multisession(workers = 6))
FCMvalues <- select_parameters.mc(algo = "FCM", data = dataset, 
                                  k = 5:10, m = seq(1.1,2,0.1), spconsist = FALSE, 
                                  indices = c("XieBeni.index", "Explained.inertia",
                                              "Negentropy.index", "Silhouette.index"),
                                  verbose = TRUE)



# plotting the silhouette index values
ggplot(FCMvalues) + 
  geom_raster(aes(x = m, y = k, fill = Silhouette.index)) + 
  geom_text(aes(x = m, y = k, label = round(Silhouette.index,2)), size = 2)+
  scale_fill_viridis() +
  coord_fixed(ratio=0.125) 


# plotting the explained inertia
ggplot(FCMvalues) + 
  geom_raster(aes(x = m, y = k, fill = Explained.inertia)) + 
  geom_text(aes(x = m, y = k, label = round(Explained.inertia,2)), size = 2)+
  scale_fill_viridis() +
  coord_fixed(ratio=0.125)

FCM_result <- CMeans(dataset, k = 4, m = 1.5, standardize = TRUE,
                     verbose = FALSE, seed = 789, tol = 0.001, init = "kpp")

maps1 <- mapClusters(object = FCM_result, undecided = 0.45)

# plotting membership values for group 2
maps1$ProbaMaps[[2]] + theme(legend.position = "bottom")

# plotting membership values for group 5
maps1$ProbaMaps[[5]] + theme(legend.position = "bottom")



# plotting the most likely categories
maps1$ClusterPlot + theme(legend.position = "bottom")

GFCMvalues <- select_parameters.mc(algo = "GFCM", data = dataset,
                                   k = 4, m = seq(1.1,2,0.1), beta = seq(0.1,0.9,0.1),
                                   spconsist = FALSE, verbose = TRUE, init = "kpp",
                                   indices = c("XieBeni.index", "Explained.inertia",
                                               "Negentropy.index", "Silhouette.index"))

# plotting the explained inertia
ggplot(GFCMvalues) + 
  geom_raster(aes(x = m, y = beta, fill = Explained.inertia)) + 
  geom_text(aes(x = m, y = beta, label = round(Explained.inertia,2)), size = 2)+
  scale_fill_viridis() +
  coord_fixed(ratio=1)

# plotting the silhouette index
ggplot(GFCMvalues) + 
  geom_raster(aes(x = m, y = beta, fill = Silhouette.index)) + 
  geom_text(aes(x = m, y = beta, label = round(Silhouette.index,2)), size = 2)+
  scale_fill_viridis() +
  coord_fixed(ratio=1)


GFCM_result <- GCMeans(dataset, k = 7, m = 1.5, beta = 0.5, standardize = TRUE,
                       verbose = FALSE, seed = 789, tol = 0.001)

# reorganizing the groups for an easier comparison
GFCM_result <- groups_matching(FCM_result, GFCM_result)

maps2 <- mapClusters(object = GFCM_result, undecided = 0.45)

# plotting membership values for group 2
maps2$ProbaMaps[[2]] + theme(legend.position = "bottom")

# plotting the most likely categories
maps2$ClusterPlot + theme(legend.position = "bottom")



w1 <- matrix(1, nrow = 3, ncol = 3)
w2 <- matrix(1, nrow = 5, ncol = 5)
w3 <- matrix(1, nrow = 7, ncol = 7)


future::plan(future::multisession(workers = 6))
SGFCMvalues <- select_parameters.mc(algo = "SGFCM", data = dataset, k = 7, m = 1.5,
                                    beta = 0.5, alpha = seq(0.5,2,0.1),
                                    window = list(w1,w2,w3),
                                    spconsist = TRUE, nrep = 5, 
                                    verbose = TRUE, chunk_size = 4,
                                    seed = 456, init = "kpp",
                                    indices = c("XieBeni.index", "Explained.inertia",
                                                "Negentropy.index", "Silhouette.index"))
# showing the silhouette index
ggplot(SGFCMvalues) + 
  geom_raster(aes(x = alpha, y = window, fill = Silhouette.index)) + 
  geom_text(aes(x = alpha, y = window, label = round(Silhouette.index,2)), size = 1.5)+
  scale_fill_viridis() +
  coord_fixed(ratio=0.125)

SGFCM_result <- SGFCMeans(dataset, k = 4, m = 1.5, standardize = TRUE,
                          lag_method = "mean",
                          window = w1, alpha = 0.9, beta = 0.5,
                          seed = 789, tol = 0.001, verbose = FALSE, init = "kpp")


# reorganizing the groups for an easier comparison
SGFCM_result <- groups_matching(FCM_result, SGFCM_result)

maps3 <- mapClusters(object = SGFCM_result, undecided = 0.2)

# plotting membership values for group 2
maps3$ProbaMaps[[2]] + theme(legend.position = "bottom")
